#
# You can authenticate with the Salesforce Marketing Cloud either via
# OAuth client credentials (clientId/clientSecret) or user login
# credentials (username/password). Note that OAuth client credentials
# and user login credentials are mutually exclusive--if you specify
# clientId/clientSecret, username/password will be ignored. Also,
# if you specify username/password, you will only be able to access
# SFMC SOAP API objects, as the SFMC REST API requires OAuth
# based authentication. Finally, if you specify username/password,
# you must also specify the soapEndpoint property, as the
# SDK will be unable to automatically determine the SOAP endpoint.
#

#
# OAuth client credentials (obtained from App Center at [1]):
#
# [1] https://appcenter.exacttarget.com
#

clientId=luniji6fwo6bc83zn550fw5l
clientSecret=w8WyL6W1Psqhe91JJZv2IIJG

#
# API user username and password (see [2] for instructions--in
# particular, be sure to select "API user" and "Grant the
# user access to the web services" when creating the API user):
#
# [2] https://help.exacttarget.com/en-US/documentation/exacttarget/admin/users/
#

#username=
#password=

#
# API endpoint URLs (the defaults should work in most cases--note
# that soapEndpoint must be specified if using username/password):
#

#endpoint=
#authEndpoint=
#soapEndpoint=

#soapEndpoint=https://webservice.exacttarget.com/Service.asmx
#soapEndpoint=https://webservice.s4.exacttarget.com/Service.asmx
#soapEndpoint=https://webservice.s6.exacttarget.com/Service.asmx
#soapEndpoint=https://webservice.s7.exacttarget.com/Service.asmx

#
# Configuration:
#

#
# true if the SDK should automatically hydrate objects that require
# multiple API calls, false otherwise. Note: If autoHydrateObjects
# is set to false, you will need to call the appropriate retrieve
# methods on objects that require multiple API calls to fully
# populate them. For example, with autoHydrateObjects set to true,
# you can simply do this to get the lists a subscriber is on:
#
#     ETSubscriber subscriber = client.retrieveObject(ETSubscriber.class,
#                                                     "key=[...]");
#     for (Subscription subscription : subscriber.getSubscriptions()) {
#         // [...]
#     }
#
# If autoHydrateObjects is set to false, however, getSubscriptions()
# will return an empty list unless retrieveSubscriptions() is called
# first:
#
#     ETSubscriber subscriber = client.retrieveObject(ETSubscriber.class,
#                                                     "key=[...]");
#     subscriber.retrieveSubscriptions();
#     for (Subscription subscription : subscriber.getSubscriptions()) {
#         // [...]
#     }
#
# Note that retrieveSubscriptions() need not be called immediately
# before getSubscriptions().. For example, you could reduce the
# number of API calls by calling retrieveSubscriptions()
# manually if and when a subscriber's subscriptions are updated.
#
# Default: true
#

autoHydrateObjects=true

#
# The amount of time in milliseconds that CXF will attempt to
# establish a connection before it times out (default 30000).
# (A value of 0 means no timeout.)
#

#cxfConnectTimeout=30000 # 30 seconds

#
# The amount of time in milliseconds that CXF will wait for a
# response before it times out (default 60000). (A value of 0
# means no timeout.)
#

#cxfReceiveTimeout=60000 # 60 seconds

#
# Disable the SSL certificate Common Name (CN) check in Apache CXF
# (default false):
#

#cxfDisableCNCheck=true

#
# Request the legacy token from the authentication service (default
# false):
#

#requestLegacyToken=true